package com.example.riderapp.activity;import java.util.List;import android.app.FragmentTransaction;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.graphics.drawable.BitmapDrawable;import android.os.Bundle;import android.view.MotionEvent;import android.view.View;import android.view.WindowManager;import android.widget.Button;import android.widget.ImageView;import com.baidu.location.BDLocation;import com.baidu.location.BDLocationListener;import com.baidu.location.LocationClient;import com.baidu.location.LocationClientOption;import com.baidu.location.LocationClientOption.LocationMode;import com.baidu.mapapi.SDKInitializer;import com.baidu.mapapi.map.BaiduMapOptions;import com.baidu.mapapi.map.BitmapDescriptor;import com.baidu.mapapi.map.BitmapDescriptorFactory;import com.baidu.mapapi.map.MapStatusUpdate;import com.baidu.mapapi.map.MapStatusUpdateFactory;import com.baidu.mapapi.map.MapView;import com.baidu.mapapi.map.MarkerOptions;import com.baidu.mapapi.map.OverlayOptions;import com.baidu.mapapi.model.LatLng;import com.example.riderapp.R;import com.example.riderapp.data.LocationShareDataSource;import com.example.riderapp.model.Teamate;import com.example.riderapp.uiutils.BaiduMapUtil;import com.example.riderapp.uiutils.BitMapUtils;import com.example.riderapp.uiutils.QuickSlidingActivity;public class TeamMapActivity extends QuickSlidingActivity implements		TeamMapCallbacks {		LocationShareDataSource lsds = new LocationShareDataSource();	MapView mMapView = null;		ImageView show_team, locaBtn;	LocationClient locationClient;	boolean isLocating = true;		@Override	public void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		// 初始化地图，百度规定的。。		SDKInitializer.initialize(getApplicationContext());		setContentView(R.layout.map_layout, R.layout.left_side);		initUI();		initBaiduMap();		// 开始定位		locationClient.start();	}		private void initBaiduMap() {		mMapView = (MapView) findViewById(R.id.bmapView);		BaiduMapUtil.setBMapOption(mMapView);		mMapView.setVisibility(View.VISIBLE);		locationClient = new LocationClient(this);		initLocationOptions(locationClient);		locationClient.registerLocationListener(new TeamLocationListener(				locationClient));		locationClient.start();		MapStatusUpdate zoomTo = MapStatusUpdateFactory.zoomTo(15.0f);		mMapView.getMap().animateMapStatus(zoomTo);	}		private void initUI() {		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,				WindowManager.LayoutParams.FLAG_FULLSCREEN);		FragmentTransaction fragmentTransaction = getFragmentManager()				.beginTransaction();		TeamMembersFragment teamMembersFragment = new TeamMembersFragment();		fragmentTransaction.replace(R.id.left_side, teamMembersFragment);		fragmentTransaction.commit();		locaBtn = (ImageView) findViewById(R.id.loca_state_image);		locaBtn.setOnClickListener(new View.OnClickListener() {			@Override			public void onClick(View v) {				if (isLocating) {					setFollowing(false);				} else {					setFollowing(true);				}			}		});		show_team = (ImageView) findViewById(R.id.map_show_team);		show_team.setOnClickListener(new View.OnClickListener() {			@Override			public void onClick(View arg0) {				getSlidingMenu().showMenu();				mMapView.getMap().clear();			}		});	}	private void setFollowing(boolean isFolling) {		if (isFolling) {			locaBtn.setImageResource(R.drawable.map_loca);		} else {			locaBtn.setImageResource(R.drawable.map_misloca);		}		isLocating = isFolling;	}	public void initLocationOptions(LocationClient locationClient) {		LocationClientOption option = new LocationClientOption();		option.setOpenGps(true);		option.setLocationMode(LocationMode.Hight_Accuracy);		option.setCoorType("gcj02");// 返回的定位结果是百度经纬度，默认值gcj02		option.setTimeOut(10000);		option.setScanSpan(1000);// 设置发起定位请求的间隔时间为5000ms		option.setIsNeedAddress(true); // 是否返回中文地址		locationClient.setLocOption(option);	}	public void loca(LatLng point) {		MapStatusUpdate updataCurrentLoca = MapStatusUpdateFactory				.newLatLng(point);		mMapView.getMap().animateMapStatus(updataCurrentLoca);	}	@Override	public void onMemberSelect(Teamate teamate) {		setFollowing(false);		LatLng point_center = new LatLng(teamate.getLatitude(),				teamate.getLongitude());		MapStatusUpdate u = MapStatusUpdateFactory.newLatLng(point_center);		mMapView.getMap().animateMapStatus(u);	}	public void refreshTeamLocation(List<Teamate> teamates) {		mMapView.getMap().clear();		for (Teamate teamate : teamates) {			LatLng point_center = new LatLng(teamate.getLatitude(),					teamate.getLongitude());			Bitmap locationMarker = getMapMarker();			BitmapDescriptor bitmap_c = BitmapDescriptorFactory					.fromBitmap(locationMarker);			// 构建MarkerOption，用于在地图上添加Marker			OverlayOptions option_c = new MarkerOptions()					.position(point_center).icon(bitmap_c).zIndex(0);			// 在地图上添加Marker，并显示			mMapView.getMap().addOverlay(option_c);		}	}	private Bitmap getMapMarker() {		Bitmap locationMarker = BitmapFactory.decodeResource(getResources(),				R.drawable.princess_flower);		Bitmap fg = BitmapFactory.decodeResource(getResources(), R.drawable.fg);		locationMarker = BitMapUtils.zoomImage(locationMarker, 100, 100);		locationMarker = BitMapUtils.toConformBitmap(locationMarker, fg);		return locationMarker;	}	class TeamLocationListener implements BDLocationListener {		LocationClient locationClient;		public TeamLocationListener(LocationClient loc) {			this.locationClient = loc;		}		@Override		public void onReceiveLocation(BDLocation location) {			// TODO 在这里添加请求队友位置方法lsds.updateTeamateLocation();			refreshTeamLocation(lsds.getAll());			if (isLocating) {				loca(new LatLng(location.getLatitude(), location.getLongitude()));			}		}	}}
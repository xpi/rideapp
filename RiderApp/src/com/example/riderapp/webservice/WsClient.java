package com.example.riderapp.webservice;import java.io.IOException;import java.util.ArrayList;import java.util.Map;import java.util.Set;import java.util.Vector;import org.ksoap2.SoapEnvelope;import org.ksoap2.SoapFault;import org.ksoap2.serialization.PropertyInfo;import org.ksoap2.serialization.SoapObject;import org.ksoap2.serialization.SoapSerializationEnvelope;import org.ksoap2.transport.HttpTransportSE;import org.xmlpull.v1.XmlPullParserException;/** * @title: WsClient.java * @description: Ksoap实现axis2客户端 * @copyright: Copyright (c) 2014 * @company: HanZhiSoft * @author HuangXiaoPeng * @date 2014-12-8 * @version 1.0 */public class WsClient {	private String NAMESPACE;	private String URL;	public WsClient(String URL, String NAMESPACE) {		this.URL = URL;		this.NAMESPACE = NAMESPACE;	}	/**	 * 	 * getSoapObject	 * 	 * @param METHOD_NAME	 *            ws方法名	 * @param params	 *            参数，String数组，以key、value顺序存放，参数循序要与wsdl一致，否则报错	 * @return	 */	public Object getSoapObject(String METHOD_NAME,			String... params) {		SoapObject request = new SoapObject(NAMESPACE, METHOD_NAME);		for (int i = 0; i < params.length; i = i + 2) {			request.addProperty(params[i], params[i + 1]);		}		SoapSerializationEnvelope envelope = new SoapSerializationEnvelope(				SoapEnvelope.VER11);		envelope.dotNet = true;		envelope.setOutputSoapObject(request);		envelope.encodingStyle = SoapSerializationEnvelope.XSD;		HttpTransportSE transport = new HttpTransportSE(URL);		try {			transport.call(NAMESPACE + METHOD_NAME, envelope);		} catch (IOException e) {			e.printStackTrace();			return null;		} catch (XmlPullParserException e) {			e.printStackTrace();			return null;		}		try {			return envelope.getResponse();		} catch (SoapFault e1) {			// TODO Auto-generated catch block			e1.printStackTrace();		}		return new Vector<>();	}	public ArrayList<PropertyInfo> propertyInfoList(Map<String, String> map) {		ArrayList<PropertyInfo> propertyInfoList = new ArrayList<>();		Set<String> keys = map.keySet();		for (String key : keys) {			PropertyInfo info = new PropertyInfo();			info.setName(key);			info.setValue(map.get(key));			propertyInfoList.add(info);		}		return propertyInfoList;	}}
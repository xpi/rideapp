package com.example.riderapp.uiutils;import java.io.ByteArrayOutputStream;import org.apache.http.client.HttpClient;import org.apache.http.client.methods.HttpPost;import org.apache.http.impl.client.DefaultHttpClient;import org.apache.http.protocol.BasicHttpContext;import org.apache.http.protocol.HttpContext;import android.graphics.Bitmap;import android.graphics.Bitmap.CompressFormat;import android.graphics.Bitmap.Config;import android.graphics.BitmapFactory;import android.graphics.Canvas;import android.graphics.Color;import android.graphics.Matrix;import android.graphics.Paint;import android.graphics.PorterDuff.Mode;import android.graphics.PorterDuffXfermode;import android.graphics.Rect;import android.graphics.RectF;public class BitMapUtils {	// 图片压缩	public static Bitmap zoomImage(Bitmap bgimage, double newWidth,			double newHeight) {		// 获取这个图片的宽和高		float width = bgimage.getWidth();		float height = bgimage.getHeight();		// 创建操作图片用的matrix对象		Matrix matrix = new Matrix();		// 计算宽高缩放率		float scaleWidth = ((float) newWidth) / width;		float scaleHeight = ((float) newHeight) / height;		// 缩放图片动作		matrix.postScale(scaleWidth, scaleHeight);		Bitmap bitmap = Bitmap.createBitmap(bgimage, 0, 0, (int) width,				(int) height, matrix, true);		return GetRoundedCornerBitmap(bitmap);	}	// 生成圆角图片	public static Bitmap GetRoundedCornerBitmap(Bitmap bitmap) {		try {			Bitmap output = Bitmap.createBitmap(bitmap.getWidth(),					bitmap.getHeight(), Config.ARGB_8888);			Canvas canvas = new Canvas(output);			final Paint paint = new Paint();			final Rect rect = new Rect(0, 0, bitmap.getWidth(),					bitmap.getHeight());			final RectF rectF = new RectF(new Rect(0, 0, bitmap.getWidth(),					bitmap.getHeight()));			final float roundPx = 50;			paint.setAntiAlias(true);			canvas.drawARGB(0, 0, 0, 0);			paint.setColor(Color.BLACK);			canvas.drawRoundRect(rectF, roundPx, roundPx, paint);			paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));			final Rect src = new Rect(0, 0, bitmap.getWidth(),					bitmap.getHeight());			canvas.drawBitmap(bitmap, src, rect, paint);			return output;		} catch (Exception e) {			return bitmap;		}	}	public  static Bitmap toConformBitmap(Bitmap background, Bitmap foreground) {		if (background == null) {			return null;		}		int bgWidth = foreground.getWidth();		int bgHeight = foreground.getHeight();		// int fgWidth = foreground.getWidth();		// int fgHeight = foreground.getHeight();		// create the new blank bitmap 创建一个新的和SRC长度宽度一样的位图		Bitmap newbmp = Bitmap				.createBitmap(bgWidth, bgHeight, Config.ARGB_8888);		Canvas cv = new Canvas(newbmp);		// draw bg into		cv.drawBitmap(background, 5, 0, null);// 在 0，0坐标开始画入bg		// draw fg into		cv.drawBitmap(foreground, 0, 0, null);// 在 0，0坐标开始画入fg ，可以从任意位置画入		// save all clip		cv.save(Canvas.ALL_SAVE_FLAG);// 保存		// store		cv.restore();// 存储		return newbmp;	}		// create a bitmap variable before anything;	  	private Bitmap bitmap;	  	// variable to set a name to the image into SD card;	// this variable, you have to put the path for the File, It's up to you;	  	public static String exsistingFileName;	  	// sendData is the function name, to call it, you can use something like sendData(null);	// remember to wrap it into a try catch;	}